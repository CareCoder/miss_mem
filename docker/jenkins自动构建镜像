// 需要在jenkins的Credentials设置中配置jenkins-harbor-creds、jenkins-k8s-config参数
pipeline {

    agent any
    environment {
        HARBOR_CREDS = credentials('jenkins-harbor-creds')
    }
    parameters {
        string(name: 'projectName', defaultValue: 'align-center-auth', description: '工程名')
        string(name: 'HARBOR_HOST', defaultValue: '172.16.57.150:7081', description: 'harbor仓库地址')
        string(name: 'DOCKER_IMAGE', defaultValue: 'align-center-auth', description: 'docker镜像名')
        string(name: 'APP_NAME', defaultValue: 'align-center-auth2', description: 'k8s中标签名')
        string(name: 'K8S_NAMESPACE', defaultValue: 'devops', description: 'k8s的namespace名称')
        string(name:'GIT_TAG', defaultValue:'1.0.0')
    }
    stages {
        stage('Maven Build') {
            steps {
                //mvn构建
                withMaven(maven: 'm3') {
                    sh "echo ${GIT_TAG}"
                    sh 'mvn clean package -Dfile.encoding=UTF-8 -DskipTests=true'
                    stash includes: 'target/*.jar', name: 'app'
                }
            }
        }
        stage('Docker Build') {
            steps {
                unstash 'app'
                sh "docker login -u admin -p Harbor12345 ${params.HARBOR_HOST}"
                sh "docker build --build-arg JAR_FILE=`ls target/*.jar |cut -d '/' -f2` -t ${params.HARBOR_HOST}/${params.projectName}/${params.DOCKER_IMAGE}:${GIT_TAG} ."
                sh "docker push ${params.HARBOR_HOST}/${params.projectName}/${params.DOCKER_IMAGE}:${GIT_TAG}"
                sh "docker rmi ${params.HARBOR_HOST}/${params.projectName}/${params.DOCKER_IMAGE}:${GIT_TAG}"
            }
        }
        stage('Deploy to K8S') {
            steps {
                sh "sed -e 's#{IMAGE_URL}#${params.HARBOR_HOST}/${params.DOCKER_IMAGE}#g;s#{IMAGE_TAG}#${GIT_TAG}#g;s#{APP_NAME}#${params.APP_NAME}#g;s#{SPRING_PROFILE}#k8s-test#g' k8s-deployment.tpl > k8s-deployment.yml"
                kubernetesDeploy configs: 'k8s-deployment.yml', kubeConfig: [path: ''], kubeconfigId: '1cb90ef1-4a7f-40c9-a6dd-bb6994017da4', secretName: '', ssh: [sshCredentialsId: '*', sshServer: ''], textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
            }
        }
    }
}
